package generator.registry.command;

import java.awt.Component;

import generator.interfaces.ITranslate;
import generator.main.GenerationException;

/** Represents a part of a Structure. */
public abstract class Argument implements ITranslate
{
	/** The types of Argument.
	 * <ul>
	 * <li>COMPOUND = 0;</li>
	 * <li>LIST = 1;</li>
	 * <li>BOOLEAN = 2;</li>
	 * <li>INT = 3;</li>
	 * <li>STRING = 4;</li>
	 * </ul> */
	public static final int COMPOUND = 0, LIST = 1, BOOLEAN = 2, INT = 3, STRING = 4;

	/** True if this Argument should always be used when generating the Command. */
	private boolean isCompulsory;
	/** This Argument's length. Determines how many elements of the Command it generates. */
	private int length;
	/** This Argument's type. */
	private final int type;

	/** Creates a new Argument.
	 * 
	 * @param type - Its type.
	 * @param isCompulsory - True if compulsory.
	 * @param length - Its length.
	 * @see Argument#COMPOUND */
	public Argument(int type, boolean isCompulsory, int length)
	{
		this.type = type;
		this.isCompulsory = isCompulsory;
		this.length = length;
	}

	/** @return The part of the Command generated by this Argument.
	 * @throws GenerationException If the user input wrong data. */
	public abstract String generate() throws GenerationException;

	/** @return The Component used to let the user determine how this Argument is used. */
	public abstract Component getComponent();

	/** @return This Argument's length. Determines how many elements of the Command it generates. */
	public int getLength()
	{
		return this.length;
	}

	/** @return This Argument's type. */
	public int getType()
	{
		return this.type;
	}

	/** Initializes the Component of this Argument. */
	public abstract void createGui();

	/** @return True if this Argument is currently being used for the Command generation. Equals {@link Argument#isCompulsory} by default, Override for more. */
	public boolean isUsed()
	{
		return this.isCompulsory;
	}

}
