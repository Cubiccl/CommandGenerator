package generator.registry.command;

import generator.interfaces.ITranslate;
import generator.main.GenerationException;

import java.awt.Component;

/** Represents a part of a Structure. */
public abstract class Argument implements ITranslate
{
	/** True if this Argument should always be used when generating the Command. */
	private boolean isCompulsory;
	/** This Argument's length. Determines how many elements of the Command it generates. -1 for any (potentially infinite) length. */
	private int minLength, maxLength;

	/** Creates a new Argument.
	 * 
	 * @param isCompulsory - True if compulsory.
	 * @param length - Its length. */
	public Argument(boolean isCompulsory, int length)
	{
		this(isCompulsory, length, length);
	}

	/** Creates a new Argument.
	 * 
	 * @param isCompulsory - True if compulsory.
	 * @param minLength - Its minimum length.
	 * @param maxLength - Its maximum length. */
	public Argument(boolean isCompulsory, int minLength, int maxLength)
	{
		this.isCompulsory = isCompulsory;
		this.minLength = minLength;
		this.maxLength = maxLength;
	}

	/** Initializes the Component of this Argument. */
	public abstract void createGui();

	/** @return The part of the Command generated by this Argument.
	 * @throws GenerationException If the user input wrong data. */
	public String generate() throws GenerationException
	{
		String value = this.generateValue();
		this.verifyValue(value);
		return value;
	}

	/** @return The value input by the user. */
	protected abstract String generateValue() throws GenerationException;

	/** @return The Component used to let the user determine how this Argument is used. */
	public abstract Component getComponent();

	/** @return This Argument's maximum length. Determines how many elements of the Command it generates. */
	public int getMaxLength()
	{
		return this.maxLength;
	}

	/** @return This Argument's minimum length. Determines how many elements of the Command it generates. */
	public int getMinLength()
	{
		return this.minLength;
	}

	/** @return True if this Argument is compulsory ; thus should always be used when generating the Command. */
	public boolean isCompulsory()
	{
		return this.isCompulsory;
	}

	/** @return True if this Argument is currently being used for the Command generation. Equals {@link Argument#isCompulsory} by default, Override for more. */
	public boolean isUsed()
	{
		return this.isCompulsory;
	}

	/** Changes this Argument's length.
	 * 
	 * @param length - The new length. */
	protected void setLength(int length)
	{
		this.minLength = length;
	}

	/** Verifies the generated value.
	 * 
	 * @param value - The generated value.
	 * @throws GenerationException If the user input wrong data. */
	protected abstract void verifyValue(String value) throws GenerationException;

}
